; this code was generated by a tool. assemble with nasm.
bits 64

global dir_equal_string
global dir_puts
global main

dir_equal_string:
	push	rbp
	mov	rbp, rsp
	xor	rax, rax
	push	rdi
	push	rsi
	jmp	dir_equal_string_L1
dir_equal_string_L0:
	mov	rax, 255
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	mov	rax, [rax]
	pop	rdi
	and	rax, rdi
	xor	rdx, rdx
	test	rax, rax
	setz	dl
	mov	rax, rdx
	test	rax, rax
	jz	dir_equal_string_L2
	mov	rax, 1
	mov	rsp, rbp
	pop	rbp
	ret
	jmp dir_equal_string_L3
dir_equal_string_L2:
dir_equal_string_L3:
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	push	rax
	mov	rax, 1
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	pop	rdi
	mov	[rdi], rax
	mov	rax, rbp
	mov	rdi, 16
	sub	rax, rdi
	push	rax
	mov	rax, 1
	push	rax
	mov	rax, rbp
	mov	rdi, 16
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	pop	rdi
	mov	[rdi], rax
dir_equal_string_L1:
	mov	rax, 255
	push	rax
	mov	rax, rbp
	mov	rdi, 16
	sub	rax, rdi
	mov	rax, [rax]
	mov	rax, [rax]
	pop	rdi
	and	rax, rdi
	push	rax
	mov	rax, 255
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	mov	rax, [rax]
	pop	rdi
	and	rax, rdi
	pop	rdi
	xor	rdx, rdx
	cmp	rax, rdi
	sete	dl
	mov	rax, rdx
	test	rax, rax
	jnz	dir_equal_string_L0
	mov	rax, 0
	mov	rsp, rbp
	pop	rbp
	ret
	mov	rsp, rbp
	pop	rbp
	ret

dir_puts:
	push	rbp
	mov	rbp, rsp
	xor	rax, rax
	push	rdi
	push	rax
	jmp	dir_puts_L1
dir_puts_L0:
	mov	rax, putch
	push	rax
	mov	rax, rbp
	mov	rdi, 16
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	pop	rdi
	pop	rax
	call	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	push	rax
	mov	rax, 1
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	pop	rdi
	mov	[rdi], rax
dir_puts_L1:
	mov	rax, rbp
	mov	rdi, 16
	sub	rax, rdi
	push	rax
	mov	rax, 255
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	mov	rax, [rax]
	pop	rdi
	and	rax, rdi
	pop	rdi
	mov	[rdi], rax
	test	rax, rax
	jnz	dir_puts_L0
	mov	rsp, rbp
	pop	rbp
	ret

main:
	push	rbp
	mov	rbp, rsp
	xor	rax, rax
	push	rax
	push	rax
	push	rax
	push	rax
	push	rax
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	push	rax
	mov	rax, brk
	push	rax
	mov	rax, 1
	neg	rax
	push	rax
	pop	rdi
	pop	rax
	call	rax
	pop	rdi
	mov	[rdi], rax
	mov	rax, brk
	push	rax
	mov	rax, 65536
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	push	rax
	pop	rdi
	pop	rax
	call	rax
	mov	rax, getcwd
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	mov	rax, 65536
	push	rax
	pop	rsi
	pop	rdi
	pop	rax
	call	rax
	mov	rax, rbp
	mov	rdi, 16
	sub	rax, rdi
	push	rax
	mov	rax, open
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	mov	rax, 0
	push	rax
	pop	rsi
	pop	rdi
	pop	rax
	call	rax
	pop	rdi
	mov	[rdi], rax
	mov	rax, rbp
	mov	rdi, 32
	sub	rax, rdi
	push	rax
	mov	rax, getdents64
	push	rax
	mov	rax, rbp
	mov	rdi, 16
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	mov	rax, 65536
	push	rax
	pop	rdx
	pop	rsi
	pop	rdi
	pop	rax
	call	rax
	pop	rdi
	mov	[rdi], rax
	mov	rax, close
	push	rax
	mov	rax, rbp
	mov	rdi, 16
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	pop	rdi
	pop	rax
	call	rax
	mov	rax, dir_puts
	push	rax
	jmp	main_L1
main_L0:
	db	"[.] [..] "
	db 0
main_L1:
	mov	rax, main_L0
	push	rax
	pop	rdi
	pop	rax
	call	rax
	jmp	main_L3
main_L2:
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	push	rax
	mov	rax, rbp
	mov	rdi, 24
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	pop	rdi
	mov	[rdi], rax
	mov	rax, rbp
	mov	rdi, 48
	sub	rax, rdi
	push	rax
	mov	rax, 255
	push	rax
	mov	rax, 18
	push	rax
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	mov	rax, [rax]
	pop	rdi
	and	rax, rdi
	pop	rdi
	mov	[rdi], rax
	mov	rax, 4
	push	rax
	mov	rax, rbp
	mov	rdi, 48
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	xor	rdx, rdx
	cmp	rax, rdi
	sete	dl
	mov	rax, rdx
	test	rax, rax
	jz	main_L4
	mov	rax, dir_equal_string
	push	rax
	mov	rax, 19
	push	rax
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	push	rax
	jmp	main_L7
main_L6:
	db	"."
	db 0
main_L7:
	mov	rax, main_L6
	push	rax
	pop	rsi
	pop	rdi
	pop	rax
	call	rax
	push	rax
	mov	rax, dir_equal_string
	push	rax
	mov	rax, 19
	push	rax
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	push	rax
	jmp	main_L9
main_L8:
	db	".."
	db 0
main_L9:
	mov	rax, main_L8
	push	rax
	pop	rsi
	pop	rdi
	pop	rax
	call	rax
	pop	rdi
	xor	rdx, rdx
	test	rax, rax
	setnz	dl
	mov	rax, rdx
	xor	rdx, rdx
	test	rdi, rdi
	setnz	dl
	mov	rdi, rdx
	or	rax, rdi
	xor	rdx, rdx
	test	rax, rax
	setz	dl
	mov	rax, rdx
	test	rax, rax
	jz	main_L10
	mov	rax, dir_puts
	push	rax
	jmp	main_L13
main_L12:
	db	"["
	db 0
main_L13:
	mov	rax, main_L12
	push	rax
	pop	rdi
	pop	rax
	call	rax
	mov	rax, dir_puts
	push	rax
	mov	rax, 19
	push	rax
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	push	rax
	pop	rdi
	pop	rax
	call	rax
	mov	rax, dir_puts
	push	rax
	jmp	main_L15
main_L14:
	db	"] "
	db 0
main_L15:
	mov	rax, main_L14
	push	rax
	pop	rdi
	pop	rax
	call	rax
	jmp main_L11
main_L10:
main_L11:
	jmp main_L5
main_L4:
main_L5:
	mov	rax, rbp
	mov	rdi, 24
	sub	rax, rdi
	push	rax
	mov	rax, 65535
	push	rax
	mov	rax, 16
	push	rax
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	mov	rax, [rax]
	pop	rdi
	and	rax, rdi
	push	rax
	mov	rax, rbp
	mov	rdi, 24
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	pop	rdi
	mov	[rdi], rax
main_L3:
	mov	rax, rbp
	mov	rdi, 32
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	mov	rax, rbp
	mov	rdi, 24
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	xor	rdx, rdx
	cmp	rax, rdi
	setl	dl
	mov	rax, rdx
	test	rax, rax
	jnz	main_L2
	mov	rax, rbp
	mov	rdi, 24
	sub	rax, rdi
	push	rax
	mov	rax, 0
	pop	rdi
	mov	[rdi], rax
	jmp	main_L17
main_L16:
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	push	rax
	mov	rax, rbp
	mov	rdi, 24
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	mov	rax, rbp
	mov	rdi, 8
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	pop	rdi
	mov	[rdi], rax
	mov	rax, rbp
	mov	rdi, 48
	sub	rax, rdi
	push	rax
	mov	rax, 255
	push	rax
	mov	rax, 18
	push	rax
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	mov	rax, [rax]
	pop	rdi
	and	rax, rdi
	pop	rdi
	mov	[rdi], rax
	mov	rax, 4
	push	rax
	mov	rax, rbp
	mov	rdi, 48
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	xor	rdx, rdx
	cmp	rax, rdi
	setne	dl
	mov	rax, rdx
	test	rax, rax
	jz	main_L18
	mov	rax, dir_puts
	push	rax
	mov	rax, 19
	push	rax
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	push	rax
	pop	rdi
	pop	rax
	call	rax
	mov	rax, putch
	push	rax
	mov	rax, 32
	push	rax
	pop	rdi
	pop	rax
	call	rax
	jmp main_L19
main_L18:
main_L19:
	mov	rax, rbp
	mov	rdi, 24
	sub	rax, rdi
	push	rax
	mov	rax, 65535
	push	rax
	mov	rax, 16
	push	rax
	mov	rax, rbp
	mov	rdi, 40
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	mov	rax, [rax]
	pop	rdi
	and	rax, rdi
	push	rax
	mov	rax, rbp
	mov	rdi, 24
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	add	rax, rdi
	pop	rdi
	mov	[rdi], rax
main_L17:
	mov	rax, rbp
	mov	rdi, 32
	sub	rax, rdi
	mov	rax, [rax]
	push	rax
	mov	rax, rbp
	mov	rdi, 24
	sub	rax, rdi
	mov	rax, [rax]
	pop	rdi
	xor	rdx, rdx
	cmp	rax, rdi
	setl	dl
	mov	rax, rdx
	test	rax, rax
	jnz	main_L16
	mov	rax, putch
	push	rax
	mov	rax, 10
	push	rax
	pop	rdi
	pop	rax
	call	rax
	mov	rsp, rbp
	pop	rbp
	ret

